
name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      CLUSTER_NAME: my-eks-cluster
      
    steps:
    - uses: actions/checkout@v2
    
    # Build and push Docker images
    - name: Build and push frontend image
      uses: docker/build-push-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: your-docker-username/frontend
        tag_with_ref: true
        
    - name: Build and push merchandise image  
      uses: docker/build-push-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: your-docker-username/merchandise
        tag_with_ref: true
        
    - name: Build and push products image
      uses: docker/build-push-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: your-docker-username/products
        tag_with_ref: true
        
    - name: Build and push shopping-cart image
      uses: docker/build-push-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: your-docker-username/shopping-cart
        tag_with_ref: true
        
    # Deploy to EKS
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      
    - name: Terraform init
      run: |
        cd terraform
        terraform init
        
    - name: Terraform apply
      run: |
        cd terraform
        terraform apply -auto-approve
        
    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      
    - name: Deploy to EKS
      run: |
        # Deploy Kubernetes resources
        kubectl apply -f kubernetes/